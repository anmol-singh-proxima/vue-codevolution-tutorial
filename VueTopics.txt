1. Binding
- binding happens using v-bind directive
- there are few ways we can bind the data or style to html element:
    - text - v-bind:text
    - html - v-bind:html
    - attributes: class, style - v-bind:class, v-bind:style

2. Conditional Rendering
- v-if
- v-if-else
- v-if-else-if
- v-else

3. List Rendering
- v-for - Normal List Conditional
- v-for with v-if - Conditional List Rendering

4. Event Handling
- v-on:{event} or @{event}

5. Form Handling
- v-model - for form element data-binding
- v-on:submit - to submit the form

6. Modifiers
- Extra addons in the vue-directives
- These modifiers can be chained one-after-other
- v-model.trim - to trim a form field like input or textarea 
- v-model.number - to treat a input[type="number"] as a number
- v-model.lazy - to prevent change with every keystroke in input field, helpful in input validation only after the input is filled completely
- v-on:submit.prevent - do the work of event.preventDefault()
- v-on:keyup:enter - to submit the form on Enter key on an input

7. Bonus directives
- v-once - it will render the element(which is using this directive) only once, at re-render it won't change
- v-pre - it won't compile the element(which is using this directive), it will render it as it is as a HTML string

8. Computed property
- It computes a peroperty based on the existing data as the computed property.
- It is better than writing the computed code (as javascript expression) directly in template since it might needs to get displayed in several places in the template.
- It is better than a method/function because whenever we want to re-render the computed property we don't need to call the computed property like a function since it stores the value as cache which gets changed only when the dependencies gets changed which improves the overall performance.